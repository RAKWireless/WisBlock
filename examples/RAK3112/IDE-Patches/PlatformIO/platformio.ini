; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]
default_envs = 
	# rak4631-debug
	; rak4631-epd-4_2
	; rak4631-epd-3_52
	; rak4631-epd-2_13
	; rak4631-tft-240x320
	; rak4631-release
	; wiscore_rak11200
	rak3112
description = WisBlock Sensor For LoRaWAN
boards_dir = rakwireless/boards

[common]
build_flags = 
	-D SW_VERSION_1=1     ; major version increase on API change / not backwards compatible
	-D SW_VERSION_2=0     ; minor version increase on API change / backward compatible
	-D SW_VERSION_3=11    ; patch version increase on bugfix, no affect on API
	-D LIB_DEBUG=0        ; 0 Disable LoRaWAN debug output
	-D API_DEBUG=0        ; 0 Disable WisBlock API debug output
	-D BASE_BOARD=0       ; 1 = RAK19003 0 = other base boards
monitor_speed = 115200
lib_deps = 
	beegee-tokyo/SX126x-Arduino
	beegee-tokyo/WisBlock-API-V2
	electroniccats/CayenneLPP
	sparkfun/SparkFun SHTC3 Humidity and Temperature Sensor Library
	adafruit/Adafruit LPS2X
	ClosedCube/ClosedCube OPT3001
	adafruit/Adafruit BME680 Library
	sparkfun/SparkFun u-blox GNSS Arduino Library 
	mikalhart/TinyGPSPlus
	adafruit/Adafruit LIS3DH
	beegee-tokyo/RAK12035_SoilMoisture@1.0.4
	rakwireless/RAKwireless VEML Light Sensor
	sensirion/Sensirion Gas Index Algorithm
	sensirion/Sensirion I2C SGP40
	sensirion/Sensirion Core
	rakwireless/RAKwireless MQx library
	adafruit/Adafruit MCP23017 Arduino Library
	pololu/VL53L0X
	beegee-tokyo/RAK I3G4250D Gyroscope
	acrandal/RevEng PAJ7620
	beegee-tokyo/nRF52_OLED
	melopero/Melopero RV3028
	seeed-studio/Grove - Coulomb Counter for 3.3V to 5V LTC2941
	beegee-tokyo/RAK12019_LTR390_UV_Light
	wollewald/INA219_WE
	beegee-tokyo/RAKwireless CAP1293 Touch Pad library
	wollewald/MPU9250_WE
	pilotak/LPS35HW
	sparkfun/SparkFun SCD30 Arduino Library
	sparkfun/SparkFun MLX90632 Noncontact Infrared Temperature Sensor
	sparkfun/SparkFun GridEYE AMG88 Library
	beegee-tokyo/RAKwireless Storage
	arduino-libraries/ArduinoECCX08
	adafruit/Adafruit FRAM I2C
	sparkfun/SparkFun u-blox Arduino Library
	beegee-tokyo/RAKwireless RAK12034
	adafruit/Adafruit EPD
	sparkfun/SparkFun STC3x Arduino Library
	beegee-tokyo/RAK12027-D7S
	; https://github.com/BoschSensortec/Bosch-BSEC2-Library
	boschsensortec/BSEC Software Library @ 1.6.1480
	beegee-tokyo/RAK12039_PM_Sensor
	beegee-tokyo/RAKwireless_ADC_SGM58031_library
	beegee-tokyo/RAK12052-MLX90640


[env:rak4631-release]
platform = nordicnrf52
board = wiscore_rak4631
framework = arduino
build_flags = 
    ; -DCFG_DEBUG=1
	${common.build_flags}
	-D NO_BLE_LED=1
	-D MY_DEBUG=0     ; 0 Disable application debug output
	-D FAKE_GPS=0	  ; 1 Enable to get a fake GPS position if no location fix could be obtained
	-D HAS_EPD=0      ; 1 = RAK14000 4.2" present 2 = 2.13" BW present, 3 = 2.13" BWR present, 4 = 3.52" present, 0 = no RAK14000 present
	-D USE_BSEC=0     ; 1 = Use Bosch BSEC algo, 0 = use simple T/H/P readings
	-L".pio/libdeps/rak4631-release/BSEC Software Library/src/cortex-m4/fpv4-sp-d16-hard"
lib_deps = 
	${common.lib_deps}
	sparkfun/SparkFun ADXL313 Arduino Library
extra_scripts = 
	pre:rename.py
	post:create_uf2.py

[env:rak4631-debug]
platform = nordicnrf52
board = wiscore_rak4631
framework = arduino
; upload_port = COM7
; upload_protocol = custom
; upload_command = py ./create_uf2.py
build_flags = 
    # -DCFG_DEBUG=1
	${common.build_flags}
	-D NO_BLE_LED=1
	-D MY_DEBUG=1     ; 0 Disable application debug output
	-D FAKE_GPS=0	 ; 1 Enable to get a fake GPS position if no location fix could be obtained
	; -DBLE_OFF=0
	-D HAS_EPD=0      ; 1 = RAK14000 4.2" present 2 = 2.13" BW present, 3 = 2.13" BWR present, 4 = 3.52" present, 0 = no RAK14000 present
	-D USE_BSEC=0     ; 1 = Use Bosch BSEC algo, 0 = use simple T/H/P readings
	-L".pio/libdeps/rak4631-debug/BSEC Software Library/src/cortex-m4/fpv4-sp-d16-hard"
lib_deps = 
	${common.lib_deps}
	sparkfun/SparkFun ADXL313 Arduino Library
extra_scripts = 
	post:create_uf2.py

[env:rak4631-epd-4_2]
platform = nordicnrf52
board = wiscore_rak4631
framework = arduino
build_flags = 
    ; -DCFG_DEBUG=1
	${common.build_flags}
	-D NO_BLE_LED=1
	-D MY_DEBUG=1     ; 0 Disable application debug output
	-D FAKE_GPS=0	 ; 1 Enable to get a fake GPS position if no location fix could be obtained
	-D ARDUINOJSON_ENABLE_PROGMEM=0
	; -DBLE_OFF=1
	-D HAS_EPD=1      ; 1 = RAK14000 4.2" present 2 = 2.13" BW present, 3 = 2.13" BWR present, 4 = 3.52" present, 0 = no RAK14000 present
	-D USE_BSEC=0     ; 1 = Use Bosch BSEC algo, 0 = use simple T/H/P readings
	-L".pio/libdeps/rak4631-epd-4_2/BSEC Software Library/src/cortex-m4/fpv4-sp-d16-hard"
lib_deps = 
	${common.lib_deps}
	sparkfun/SparkFun ADXL313 Arduino Library
extra_scripts = 
	post:create_uf2.py

[env:rak4631-epd-3_52]
platform = nordicnrf52
board = wiscore_rak4631
framework = arduino
build_flags = 
    ; -DCFG_DEBUG=1
	${common.build_flags}
	-D NO_BLE_LED=1
	-D MY_DEBUG=1     ; 0 Disable application debug output
	-D FAKE_GPS=0	 ; 1 Enable to get a fake GPS position if no location fix could be obtained
	-D ARDUINOJSON_ENABLE_PROGMEM=0
	; -DBLE_OFF=1
	-D HAS_EPD=4      ; 1 = RAK14000 4.2" present 2 = 2.13" BW present, 3 = 2.13" BWR present, 4 = 3.52" present, 0 = no RAK14000 present
	-D USE_BSEC=1     ; 1 = Use Bosch BSEC algo, 0 = use simple T/H/P readings
	-L".pio/libdeps/rak4631-epd-4_2/BSEC Software Library/src/cortex-m4/fpv4-sp-d16-hard"
lib_deps = 
	${common.lib_deps}
	sparkfun/SparkFun ADXL313 Arduino Library
extra_scripts = 
	post:create_uf2.py

[env:rak4631-epd-2_13]
platform = nordicnrf52
board = wiscore_rak4631
framework = arduino
upload_port = COM31
build_flags = 
    ; -DCFG_DEBUG=1
	${common.build_flags}
	-D NO_BLE_LED=1
	-D MY_DEBUG=1     ; 0 Disable application debug output
	-D FAKE_GPS=0	 ; 1 Enable to get a fake GPS position if no location fix could be obtained
	-D ARDUINOJSON_ENABLE_PROGMEM=0
	; -DBLE_OFF=1
	-D HAS_EPD=2      ; 1 = RAK14000 4.2" present 2 = 2.13" BW present, 3 = 2.13" BWR present, 4 = 3.52" present, 0 = no RAK14000 present
	-D USE_BSEC=1     ; 1 = Use Bosch BSEC algo, 0 = use simple T/H/P readings
	-L".pio/libdeps/rak4631-epd-2_13/BSEC Software Library/src/cortex-m4/fpv4-sp-d16-hard"
lib_deps = 
	${common.lib_deps}
	sparkfun/SparkFun ADXL313 Arduino Library
extra_scripts = 
	post:create_uf2.py

[env:rak4631-tft-240x320]
platform = nordicnrf52
board = wiscore_rak4631
framework = arduino
upload_port = COM31
build_flags = 
    ; -DCFG_DEBUG=1
	${common.build_flags}
	-D NO_BLE_LED=1
	-D MY_DEBUG=1     ; 0 Disable application debug output
	-D FAKE_GPS=0	 ; 1 Enable to get a fake GPS position if no location fix could be obtained
	-D ARDUINOJSON_ENABLE_PROGMEM=0
	; -DBLE_OFF=1
	-D HAS_EPD=0      ; 1 = RAK14000 4.2" present 2 = 2.13" BW present, 3 = 2.13" BWR present, 4 = 3.52" present, 0 = no RAK14000 present
	-D USE_BSEC=1     ; 1 = Use Bosch BSEC algo, 0 = use simple T/H/P readings
	-D USER_SETUP_LOADED=1
	-D DISABLE_ALL_LIBRARY_WARNINGS=1
	-D ST7789_DRIVER=1
	-D TFT_WIDTH=240
	-D TFT_HEIGHT=320
	-D TFT_MISO=WB_SPI_MISO
	-D TFT_MOSI=WB_SPI_MOSI
	-D TFT_SCLK=WB_SPI_CLK
	-D TFT_CS=WB_SPI_CS
	-D TFT_DC=WB_IO4
	-D TFT_RST=WB_IO5
	-D TFT_BL=WB_IO3
	-D LOAD_GLCD=1
	-D SPI_FREQUENCY=50000000
	-L".pio/libdeps/rak4631-epd-2_13/BSEC Software Library/src/cortex-m4/fpv4-sp-d16-hard"
lib_deps = 
	${common.lib_deps}
	sparkfun/SparkFun ADXL313 Arduino Library
	https://github.com/aselectroworks/Arduino-FT6336U.git
	; seeed-studio/Seeed_Arduino_LCD
	bodmer/TFT_eSPI
extra_scripts = 
	post:create_uf2.py

[env:wiscore_rak11200]
platform = espressif32
board = wiscore_rak11200
framework = arduino
board_build.partitions = huge_app.csv
build_flags = 
    ; -DCFG_DEBUG=1
	${common.build_flags}
	-DBOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
	-D NO_BLE_LED=1
	-D MY_DEBUG=1     ; 0 Disable application debug output
	-D FAKE_GPS=0	 ; 1 Enable to get a fake GPS position if no location fix could be obtained
	-D HAS_EPD=0      ; 1 = RAK14000 4.2" present 2 = 2.13" BW present, 3 = 2.13" BWR present, 4 = 3.52" present, 0 = no RAK14000 present
	-D USE_BSEC=0     ; 1 = Use Bosch BSEC algo, 0 = use simple T/H/P readings
	-L".pio/libdeps/wiscore_rak11200/BSEC Software Library/src/cortex-m4/fpv4-sp-d16-hard"
lib_deps = 
	${common.lib_deps}
	h2zero/NimBLE-Arduino
	bblanchon/ArduinoJson
	sparkfun/SparkFun ADXL313 Arduino Library ; @1.0.0

[env:rak3112]
framework = arduino
platform = platformio/espressif32
board = rak3112
upload_protocol = esptool
upload_speed = 921600
monitor_speed = 115200
board_build.filesystem = littlefs

build_flags = 
	${common.build_flags}
	-I rakwireless/variants/rak3112
	-D LIB_DEBUG=0        ; 0 Disable LoRaWAN debug output
	-D API_DEBUG=0        ; 0 Disable WisBlock API debug output
	-D BASE_BOARD=0       ; 1 = RAK19003 0 = other base boards
	-D _VARIANT_RAK3112_=1
	-D NO_BLE_LED=1
	-D MY_DEBUG=1     ; 0 Disable application debug output
	-D FAKE_GPS=0	 ; 1 Enable to get a fake GPS position if no location fix could be obtained
	-D HAS_EPD=0      ; 1 = RAK14000 4.2" present 2 = 2.13" BW present, 3 = 2.13" BWR present, 4 = 3.52" present, 0 = no RAK14000 present
	-D USE_BSEC=0     ; 1 = Use Bosch BSEC algo, 0 = use simple T/H/P readings
	-L".pio/libdeps/rak3112/BSEC Software Library/src/esp32"
lib_deps =
	${common.lib_deps}
	sparkfun/SparkFun ADXL313 Arduino Library ; @1.0.0

; customize the partition table
; http://docs.platformio.org/en/latest/platforms/espressif32.html#partition-tables
; board_build.partitions = default_16MB.csv ; partition-table.csv
board_build.partitions = default_16MB.csv